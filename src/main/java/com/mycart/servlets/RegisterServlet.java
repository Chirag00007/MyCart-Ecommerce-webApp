/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/JSP_Servlet/Servlet.java to edit this template
 */
package com.mycart.servlets;

import com.mycart.entities.User;
import com.mycart.helper.FactoryProvider;
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;

import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author CHIRAG VOHRA
 */

public class RegisterServlet extends HttpServlet {

    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    protected void service(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        try ( PrintWriter out = response.getWriter()) {
            
            try {
             String userName = request.getParameter("user_name");
             String userEmail = request.getParameter("user_email");
             String userPassword = request.getParameter("user_pass");
             String userPhone = request.getParameter("user_phone");
             String userAddress = request.getParameter("user_address");
             
            
//            if(userName.isEmpty())
//            {
//                out.println("Name is empty"); // You can do some validations here if you want.
//               
//            }

            
             
             // Creating user(check in entities) object to store data
             
           User user = new User(userName, userEmail, userPassword, userPhone, "default.jpg", userAddress,"normal");
              
           // Storing the data using hibernate
           // FactoryProvider is created in helper section pls check
           // basically it is returning the Session factory object by which we are getting session object using openSession()
           
           
          Session hibernateSession = FactoryProvider.getFactory().openSession();
          
          Transaction tx = hibernateSession.beginTransaction();
          
          //  this userId is autogenerated user id // by annotations we have done in User class
          int userId = (int) hibernateSession.save(user);
          tx.commit();
          hibernateSession.close();
          
               
          // httpSession is used to store the values(of that session) for particular time
          // creating to show some good message to user if successfully register
          HttpSession httpSession = request.getSession();
          httpSession.setAttribute("message","Registration Successful !! your userId is " +userId );
          response.sendRedirect("register.jsp");
        
             
            } catch (Exception e) {
          
                
                
                HttpSession httpSession = request.getSession();
          // httpSession.setAttribute("message","Registration Successful !! your userId is " +userId );
          response.sendRedirect("register.jsp");
      
                e.printStackTrace();
            }
        }
    }

  

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

}
